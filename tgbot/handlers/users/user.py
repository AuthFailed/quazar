import logging

from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from dotenv import load_dotenv
import os

from tgbot.keyboards.user.inline import user_menu, to_home, user_revoke_sub
from tgbot.misc.marzban_api import get_user_by_id, format_bytes, revoke_user_sub

user_router = Router()
load_dotenv()


async def is_user_in_channel(user_id: int, bot):
    channel_id = os.environ.get('CHANNEL')
    try:
        sub = await bot.get_chat_member(chat_id=channel_id, user_id=user_id)
        if sub.status != "left":
            return True
        else:
            await bot.send_message(chat_id=user_id, text='<b>–ü—Ä–∏–≤–µ—Ç üëã</b>\n\n'
                                                         '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª <b>‚≠ê –ö–≤–∞–∑–∞—Ä</b>\n\n'
                                                         '<b><a href="https://t.me/+LUD7ZdTFBrwxMTli">–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è</a></b>\n\n'
                                                         '–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤–µ—Ä–Ω–∏—Å—å –≤ –±–æ—Ç–∞ –∏ –Ω–∞–∂–º–∏ /start',
                                   disable_web_page_preview=True)
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

    return False


@user_router.message(CommandStart())
async def user_start(message: Message):
    if not await is_user_in_channel(message.from_user.id, bot=message.bot):
        return

    user = await get_user_by_id(user_id=message.from_user.id)
    ready_message = f"""‚≠ê <b>–ö–≤–∞–∑–∞—Ä | –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>

üéüÔ∏è –î–æ—Å—Ç—É–ø: {"‚úÖ –ï—Å—Ç—å" if user.status == "active" else "‚ùå –ù–µ—Ç"}
üíø –ú–µ—Å—è—á–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫: {format_bytes(user.used_traffic)} / {format_bytes(user.data_limit)}

<b>–î–æ–ø. –∏–Ω—Ñ–æ</b>
–¢—Ä–∞—Ñ–∏–∫ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: {format_bytes(user.lifetime_used_traffic)}
–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π ID: <code>{user.username}</code>
"""

    await message.answer(ready_message,
                         reply_markup=user_menu(sub_link=user.subscription_url))


@user_router.callback_query(F.data == "usermenu")
async def usermenu(callback: CallbackQuery) -> None:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    if not await is_user_in_channel(callback.from_user.id, bot=callback.bot):
        await callback.answer()
        return

    user = await get_user_by_id(user_id=callback.from_user.id)
    ready_message = f"""‚≠ê <b>–ö–≤–∞–∑–∞—Ä | –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>

üéüÔ∏è –î–æ—Å—Ç—É–ø: {"‚úÖ –ï—Å—Ç—å" if user.status == "active" else "‚ùå –ù–µ—Ç"}
üíø –ú–µ—Å—è—á–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫: {format_bytes(user.used_traffic)} / {format_bytes(user.data_limit)}

<b>–î–æ–ø. –∏–Ω—Ñ–æ</b>
–¢—Ä–∞—Ñ–∏–∫ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: {format_bytes(user.lifetime_used_traffic)}
–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π ID: <code>{user.username}</code>
"""

    await callback.message.edit_text(ready_message,
                                     reply_markup=user_menu(sub_link=user.subscription_url))
    await callback.answer()


@user_router.callback_query(F.data == "usermenu_faq")
async def usermenu_faq(callback: CallbackQuery) -> None:
    """–†–∞–∑–¥–µ–ª FAQ"""
    if not await is_user_in_channel(callback.from_user.id, bot=callback.bot):
        await callback.answer()
        return

    await callback.message.edit_text("""‚≠ê <b>–ö–≤–∞–∑–∞—Ä | FAQ</b>

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞</b>
üá¶üáπ –ê–≤—Å—Ç—Ä–∏—è - <code>152.53.109.159</code>
üá∏üá™ –®–≤–µ—Ü–∏—è - <code>77.221.141.88</code>

<b>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è</b>
<blockquote expandable>VPN –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ—Ç–æ–∫–æ–ª VLESS –ø–æ–≤–µ—Ä—Ö TCP —Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π REALITY - —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫, –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–ª–∏—á–Ω–æ –º–∞—Å–∫–∏—Ä—É–µ—Ç —Ç—Ä–∞—Ñ–∏–∫ –ø–æ–¥ –æ–±—ã—á–Ω—ã–µ HTTPS-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è XTLS –∏ Vision –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã</blockquote>

<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤</b>
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –≤—Å–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VPN. –ù–∞–π—Ç–∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –º–æ–∂–Ω–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç–≤–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–∏""",
                                     reply_markup=to_home(), disable_web_page_preview=True)
    await callback.answer()


@user_router.callback_query(F.data == "usermenu_revokesub")
async def usermenu_revokesub(callback: CallbackQuery) -> None:
    """–ú–µ–Ω—é –æ–±–Ω—É–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏"""
    if not await is_user_in_channel(callback.from_user.id, bot=callback.bot):
        await callback.answer()
        return

    await callback.message.edit_text(f"""‚≠ê <b>–ö–≤–∞–∑–∞—Ä | –û–±–Ω—É–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏</b>

‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ</b>
–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ <b>–æ–±–Ω—É–ª–∏—Ç —Ç–µ–∫—É—â—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É</b>
–í—Å–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–æ —Ç–µ–∫—É—â–µ–π —Å—Å—ã–ª–∫–µ - <b>–ø—Ä–æ–¥–æ–ª–∂–∞—Ç —Ä–∞–±–æ—Ç–∞—Ç—å</b>, –Ω–æ –ø–æ –Ω–µ–π –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è –ø–æ–ª—É—á–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–≤

–ù–æ–≤—É—é —Å—Å—ã–ª–∫—É –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é

<i>–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –µ—Å–ª–∏ –∫ —Ç–≤–æ–µ–π —Å—Å—ã–ª–∫–∏ –∫—Ç–æ-—Ç–æ –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø</i>""", reply_markup=user_revoke_sub())
    await callback.answer()


@user_router.callback_query(F.data == "usermenu_revokesub_agree")
async def usermenu_revokesub_agree(callback: CallbackQuery) -> None:
    """–û–±–Ω—É–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if not await is_user_in_channel(callback.from_user.id, bot=callback.bot):
        await callback.answer()
        return

    user = await get_user_by_id(user_id=callback.from_user.id)
    api_response = await revoke_user_sub(user.username)

    ready_message = f"""‚≠ê <b>–ö–≤–∞–∑–∞—Ä | –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>

üéüÔ∏è –î–æ—Å—Ç—É–ø: {"‚úÖ –ï—Å—Ç—å" if user.status == "active" else "‚ùå –ù–µ—Ç"}
üíø –ú–µ—Å—è—á–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫: {format_bytes(user.used_traffic)} / {format_bytes(user.data_limit)}

<b>–î–æ–ø. –∏–Ω—Ñ–æ</b>
–¢—Ä–∞—Ñ–∏–∫ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: {format_bytes(user.lifetime_used_traffic)}
–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π ID: <code>{user.username}</code>
    """

    await callback.message.edit_text(ready_message, reply_markup=user_menu(sub_link=api_response.subscription_url))
    await callback.answer("–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É –æ–±–Ω—É–ª–µ–Ω–∞")