from aiogram import Router
from aiogram.types import CallbackQuery, Message
from dotenv import load_dotenv

from tgbot.handlers.users.user import is_user_in_channel
from tgbot.keyboards.user.instructions import back_to_apps
from tgbot.misc.remna_api import activate_tv, get_user_by_tgid
from aiogram.fsm.context import FSMContext

from tgbot.misc.states import TV_SETUP



user_instructions = Router()
load_dotenv()


@user_instructions.callback_query(lambda c: c.data.startswith("ios_app_"))
async def ios_app_instructions(callback: CallbackQuery) -> None:
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è iOS"""
    await callback.answer()

    if not await is_user_in_channel(callback.from_user.id, bot=callback.bot):
        return

    user = await get_user_by_tgid(callback.from_user.id)

    app = callback.data.split('_')[2]
    device = callback.data.split('_')[0]

    message = ""
    if app == "streizand":
        message = f"""<b>‚≠ê –ö–≤–∞–∑–∞—Ä | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è iOS</b>

<b>üë®‚Äçüîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Streizand</b>
1. –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ <a href="https://apps.apple.com/ru/app/streisand/id6450534064">Streizand</a>
2. –°–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É
<blockquote><code>{user["subscriptionUrl"]}</code></blockquote>
3. –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–∞–∂–º–∏ –Ω–∞ –ø–ª—é—Å–∏–∫ —Å–ø—Ä–∞–≤–∞ —Å–≤–µ—Ä—Ö—É –∏ –≤—ã–±–µ—Ä–∏ <b>–î–æ–±–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞</b>
    """
    elif app == "v2box":
        message = f"""<b>‚≠ê –ö–≤–∞–∑–∞—Ä | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è iOS</b>

<b>üë®‚Äçüîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ v2box</b>
1. –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ <a href="https://apps.apple.com/ru/app/v2box-v2ray-client/id6446814690">v2box</a>
2. –°–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É
<blockquote><code>{user["subscriptionUrl"]}</code></blockquote>
3. –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –æ—Ç–∫—Ä–æ–π —Å–Ω–∏–∑—É —Ä–∞–∑–¥–µ–ª Configs
4. –ù–∞–∂–º–∏ –Ω–∞ –ø–ª—é—Å–∏–∫ —Å–ø—Ä–∞–≤–∞ —Å–≤–µ—Ä—Ö—É –∏ –≤—ã–±–µ—Ä–∏ <b>import v2ray uri from clipboard</b>
    """
    await callback.message.edit_text(message, reply_markup=back_to_apps(device=device),
                                     disable_web_page_preview=True)


@user_instructions.callback_query(lambda c: c.data.startswith("android_app_"))
async def android_app_instructions(callback: CallbackQuery) -> None:
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Android"""
    await callback.answer()

    if not await is_user_in_channel(callback.from_user.id, bot=callback.bot):
        return

    user = await get_user_by_tgid(callback.from_user.id)

    app = callback.data.split('_')[2]
    device = callback.data.split('_')[0]

    message = ""
    if app == "v2rayng":
        message = f"""<b>‚≠ê –ö–≤–∞–∑–∞—Ä | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android</b>

<b>üë®‚Äçüîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ v2rayNG</b>
1. –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ <a href="https://play.google.com/store/apps/details?id=com.v2ray.ang">v2rayNG</a>
2. –°–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É
<blockquote><code>{user["subscriptionUrl"]}</code></blockquote>
3. –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–∞–∂–º–∏ –Ω–∞ —Ç—Ä–∏ —Ç–æ—á–∫–∏ —Å–ø—Ä–∞–≤–∞ —Å–≤–µ—Ä—Ö—É –∏ –≤—ã–±–µ—Ä–∏ <code>–û–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –≥—Ä—É–ø–ø—ã</code>
"""
    elif app == "happ":
        message = f"""<b>‚≠ê –ö–≤–∞–∑–∞—Ä | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android</b>

<b>üë®‚Äçüîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Happ</b>
1. –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ <a href="https://github.com/FlyFrg/Happ_android_update/releases/latest/download/Happ.apk">Happ</a>
2. –°–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É
<blockquote><code>{user["subscriptionUrl"]}</code></blockquote>
3. –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–∞–∂–º–∏ –Ω–∞ –ø–ª—é—Å–∏–∫ —Å–ø—Ä–∞–≤–∞ —Å–≤–µ—Ä—Ö—É –∏ –≤—ã–±–µ—Ä–∏ <b>–í—Å—Ç–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞</b>
"""
    await callback.message.edit_text(message, reply_markup=back_to_apps(device=device),
                                     disable_web_page_preview=True)


@user_instructions.callback_query(lambda c: c.data.startswith("windows_app_"))
async def android_app_instructions(callback: CallbackQuery) -> None:
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Windows"""
    await callback.answer()

    if not await is_user_in_channel(callback.from_user.id, bot=callback.bot):
        return

    user = await get_user_by_tgid(callback.from_user.id)

    app = callback.data.split('_')[2]
    device = callback.data.split('_')[0]

    message = ""
    
    if app == "nekoray":
        message = """<b>‚≠ê –ö–≤–∞–∑–∞—Ä | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Windows</b>

<b>üë®‚Äçüîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nekoray</b>
1. –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É <a href="https://github.com/MatsuriDayo/nekoray/releases/download/4.0.1/nekoray-4.0.1-2024-12-12-windows64.zip">Nekoray</a>
2. –°–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É
<blockquote><code>{user["subscriptionUrl"]}</code></blockquote>
3. –í –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞–∂–º–∏ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏ –ø–æ –ø—É—Å—Ç–æ–º—É –º–µ—Å—Ç—É - <b>–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞</b> - <b>–î–æ–±–∞–≤–∏—Ç—å –≤ —ç—Ç—É –≥—Ä—É–ø–ø—É</b>

<b>üìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ</b>
–î–æ–ø. –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º—ã

<b>ü§î –†–µ–∂–∏–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</b>
<blockquote expandable><b>üåé –†–µ–∂–∏–º TUN</b>
–ê–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º TUN –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤–µ—Å—å —Å–µ—Ç–µ–≤–æ–π —Ç—Ä–∞—Ñ–∏–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ VPN. –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å–µ—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π

<b>üîÄ –†–µ–∂–∏–º —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏</b>
–ê–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏ –≤–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ VPN. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–∫—Å–∏ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è 
</blockquote>

<b>üéå –ú–∞—Ä—à—Ä—É—Ç—ã</b>
<blockquote expandable><b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è Discord</b>
1. –û—Ç–∫—Ä–æ–π —Ä–∞–∑–¥–µ–ª <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞</b> - <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤</b> - <b>–ë–∞–∑–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã</b> - <b>–ö–∞—Å—Ç–æ–º–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã</b>
2. –í—Å—Ç–∞–≤—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:
<code>{
  "rules": [
    {
      "outbound": "proxy",
      "process_name": [
        "Discord.exe",
        "Update.exe"
      ]
    }
  ]
}</code> 
–∏ –Ω–∞–∂–º–∏ –û–ö
3. <b>Outbound –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é</b> –≤—ã–±–µ—Ä–∏ <b>bypass</b>
4. –ó–∞–π–¥–∏ –≤ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞</b> - <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤</b> - <b>–û–±—â–∏–µ</b>
5. –í—ã–±–µ—Ä–∏ –≤ –ø—É–Ω–∫—Ç–∞—Ö <b>–°—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–æ–º–µ–Ω–æ–≤</b> –∏ <b>–°—Ç—Ä–∞—Ç–µ–≥–∏—è –≤—ã–±–æ—Ä–∞ –∞–¥—Ä–µ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞</b> –ø–∞—Ä–∞–º–µ—Ç—Ä "ipv4_only"

–ù–∞–∂–º–∏ –û–ö –∏ –ø—Ä–æ–≤–µ—Ä—å —Ä–∞–±–æ—Ç—É Discord –ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏</blockquote>
"""
    elif app == "v2rayn":
        message = """<b>‚≠ê –ö–≤–∞–∑–∞—Ä | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Windows</b>

<b>üë®‚Äçüîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ v2RayN</b>
1. –°–∫–∞—á–∞–π <a href="https://github.com/2dust/v2rayN/releases/download/7.4.2/v2rayN-windows-64-SelfContained-With-Core.7z">–∞—Ä—Ö–∏–≤ –ø—Ä–æ–≥—Ä–∞–º–º—ã</a>
2. –†–∞—Å–ø–∞–∫—É–π –∞—Ä—Ö–∏–≤ –≤ —É–¥–æ–±–Ω–æ–µ –º–µ—Å—Ç–æ, –∑–∞–ø—É—Å—Ç–∏ <b>v2rayN.exe</b>
3. –°–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É
<blockquote><code>{user["subscriptionUrl"]}</code></blockquote>
4. –í –ø—Ä–æ–≥—Ä–∞–º–º–µ –≤—Å—Ç–∞–≤—å –ø–æ–¥–ø–∏—Å–∫—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ ctrl+v
5. –û–±–Ω–æ–≤–∏ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–∂–∞–≤ –Ω–∞ <b>Subscription Group</b> - <b>Update Subscriptions without proxy</b>

<b>üìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ</b>
–î–æ–ø. –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º—ã

<b>ü§î –†–µ–∂–∏–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</b>
<blockquote expandable><b>üåé –†–µ–∂–∏–º TUN</b>
–ê–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º TUN –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤–µ—Å—å —Å–µ—Ç–µ–≤–æ–π —Ç—Ä–∞—Ñ–∏–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ VPN. –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å–µ—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π

<b>üîÄ –†–µ–∂–∏–º —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏</b>
–ê–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏ –≤–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ VPN. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–∫—Å–∏ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è 
</blockquote>

<b>üéå –†–µ–≥–∏–æ–Ω</b>
<blockquote expandable><b>üí´ –°–º–µ–Ω–∞ —Ä–µ–≥–∏–æ–Ω–∞</b>
1. –°–≤–µ—Ä—Ö—É –æ—Ç–∫—Ä–æ–π —Ä–∞–∑–¥–µ–ª <b>Settings</b> - <b>Regional presets setting</b> –∏ –≤—ã–±–µ—Ä–∏ <b>Russia</b>
2. –°–Ω–∏–∑–µ –≤ –æ–∫–Ω–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –µ—Å—Ç—å –≤—ã–±–æ—Ä Routing:
- –í—Å—ë - –í–µ—Å—å —Ç—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–∫—Å–∏—Ä—É–µ—Ç—Å—è –∏ –∏–¥–µ—Ç —á–µ—Ä–µ–∑ VPN
- –í—Å—ë, –∫—Ä–æ–º–µ –†–§ - –í–µ—Å—å —Ç—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–∫—Å–∏—Ä—É–µ—Ç—Å—è, –∫—Ä–æ–º–µ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤ –∏ –≤—Å–µ—Ö —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö IP</blockquote>
"""
    await callback.message.edit_text(message, reply_markup=back_to_apps(device=device),
                                     disable_web_page_preview=True)
    
@user_instructions.callback_query(lambda c: c.data.startswith("androidtv_app_"))
async def android_app_instructions(callback: CallbackQuery, state: FSMContext) -> None:
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Android"""
    await callback.answer()
    
    if not await is_user_in_channel(callback.from_user.id, bot=callback.bot):
        return

    app = callback.data.split('_')[2]
    device = callback.data.split('_')[0]

    message = ""
    if app == "vpn4tv":
        await state.set_state(TV_SETUP.CODE)
        message = f"""<b>‚≠ê –ö–≤–∞–∑–∞—Ä | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è VPN4TV</b>

<b>üë®‚Äçüîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ VPN4TV</b>
1. –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ <a href="https://play.google.com/store/apps/details?id=com.vpn4tv.hiddify">VPN4TV</a>
2. –ó–∞–π–¥–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –Ω–∞–π–¥–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ 10-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥
3. –ù–∞–ø–∏—à–∏ –µ–≥–æ –≤ —ç—Ç–æ—Ç —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ–º
"""

    await callback.message.edit_text(message, reply_markup=back_to_apps(device=device),
                                     disable_web_page_preview=True)


@user_instructions.message(TV_SETUP.CODE)
async def proccess_tv_setup(message: Message, state: FSMContext):
    if not await is_user_in_channel(message.from_user.id, bot=message.bot):
        return

    await state.clear()
    user = await get_user_by_tgid(message.chat.id)
    activate_status = await activate_tv(uuid=user['uuid'], sub=user["subscriptionUrl"])
    if activate_status: message.answer("–£—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –∫–ª—é—á, –ø–æ–¥–æ–∂–¥–∏ –º–∏–Ω—É—Ç–∫—É")
    await message.bot.delete_message(message.chat.id, message.message_id)